"" basic settings
set nocompatible			" set not compatible with vi
" set showmatch               " show matching 
set ignorecase              " case insensitive 
set mouse=v                 " middle-click paste with 
set hlsearch                " highlight search 
set incsearch               " incremental search
set tabstop=4               " number of columns occupied by a tab 
set softtabstop=4           " see multiple spaces as tabstops so <BS> does the right thing
" set expandtab               " converts tabs to white space
set shiftwidth=4            " width for autoindents
set autoindent              " indent a new line the same amount as the line just typed
set number                  " add line numbers
set relativenumber
set wildmenu				" navigate tab completion
set wildmode=longest,full   " tab completion
" set cc=80                  " set an 80 column border for good coding style
filetype plugin indent on   "allow auto-indenting depending on file type
syntax on                   " syntax highlighting
set mouse=a                 " enable mouse click
" set clipboard=unnamedplus   " using system clipboard
filetype plugin on
" set cursorline              " highlight current cursorline
set ttyfast                 " Speed up scrolling in Vim
" set spell                 " enable spell check (may need to download language package)
 set noswapfile            " disable creating swap file
"  set backupdir=~/.cache/vim " Directory to store backup files
set laststatus=2			" set up status line
" set background=dark			" dark mode

" terminal
set termwinscroll=1000
nnoremap <c-s> :enew<cr>:terminal ++curwin<cr>

" netrw
nnoremap <c-n> :enew<cr>:Explore<cr>
let g:netrw_keepdir = 0 " makes file copying word easier
let g:netrw_banner = 0 " hide the banner
" different copy command for easier directory copying
let g:netrw_localcopydircmd = 'cp -r'

" buffer cleanup
function s:bcleanup() abort
    let l:buffers = filter(getbufinfo(), {_, v -> !v.loaded && v.listed})
    if !empty(l:buffers)
        execute 'bdelete' join(map(l:buffers, {_, v -> v.bufnr}))
    endif
endfunction
command! -bar Bcleanup call s:bcleanup()

"" gui
set guifont=Iosevka\ Fixed\ Slab:h14

"" plugins

" gruvbox8
colorscheme gruvbox8

" lightline
let g:lightline = {
	\ 'colorscheme': 'gruvbox8',
	\ }

" ale
let g:ale_linters = {
\ 'cpp': []
\}

let g:ale_completion_enabled = 1

" language-specific settings

" scheme and friends
autocmd Filetype scheme let b:AutoPairs={'(':')', '[':']', '{':'}','"':'"','```':'```','"""':'"""',"'''":"'''"}
autocmd Filetype scheme set expandtab
" ## added by OPAM user-setup for vim / base ## 93ee63e278bdfc07d1139a748ed3fff2 ## you can edit, but keep this line
let s:opam_share_dir = system("opam config var share")
let s:opam_share_dir = substitute(s:opam_share_dir, '[\r\n]*$', '', '')

let s:opam_configuration = {}

function! OpamConfOcpIndent()
  execute "set rtp^=" . s:opam_share_dir . "/ocp-indent/vim"
endfunction
let s:opam_configuration['ocp-indent'] = function('OpamConfOcpIndent')

function! OpamConfOcpIndex()
  execute "set rtp+=" . s:opam_share_dir . "/ocp-index/vim"
endfunction
let s:opam_configuration['ocp-index'] = function('OpamConfOcpIndex')

function! OpamConfMerlin()
  let l:dir = s:opam_share_dir . "/merlin/vim"
  execute "set rtp+=" . l:dir
endfunction
let s:opam_configuration['merlin'] = function('OpamConfMerlin')

let s:opam_packages = ["ocp-indent", "ocp-index", "merlin"]
let s:opam_check_cmdline = ["opam list --installed --short --safe --color=never"] + s:opam_packages
let s:opam_available_tools = split(system(join(s:opam_check_cmdline)))
for tool in s:opam_packages
  " Respect package order (merlin should be after ocp-index)
  if count(s:opam_available_tools, tool) > 0
    call s:opam_configuration[tool]()
  endif
endfor
" ## end of OPAM user-setup addition for vim / base ## keep this line
" ## added by OPAM user-setup for vim / ocp-indent ## 4978af8a0493e4319b4ce8dee7eae235 ## you can edit, but keep this line
if count(s:opam_available_tools,"ocp-indent") == 0
  source "/Users/dv/.opam/default/share/ocp-indent/vim/indent/ocaml.vim"
endif
" ## end of OPAM user-setup addition for vim / ocp-indent ## keep this line
