"" basic settings
set nocompatible			" set not compatible with vi
" set showmatch               " show matching 
set ignorecase              " case insensitive 
set mouse=v                 " middle-click paste with 
set hlsearch                " highlight search 
set incsearch               " incremental search
set tabstop=4               " number of columns occupied by a tab 
set softtabstop=4           " see multiple spaces as tabstops so <BS> does the right thing
" set expandtab               " converts tabs to white space
set shiftwidth=4            " width for autoindents
set autoindent              " indent a new line the same amount as the line just typed
set number                  " add line numbers
set relativenumber
set wildmenu				" navigate tab completion
set wildmode=longest,full   " tab completion
" set cc=80                  " set an 80 column border for good coding style
filetype plugin indent on   "allow auto-indenting depending on file type
syntax on                   " syntax highlighting
set mouse=a                 " enable mouse click
" set clipboard=unnamedplus   " using system clipboard
filetype plugin on
" set cursorline              " highlight current cursorline
set ttyfast                 " Speed up scrolling in Vim
" set spell                 " enable spell check (may need to download language package)
 set noswapfile            " disable creating swap file
"  set backupdir=~/.cache/vim " Directory to store backup files
set laststatus=2			" set up status line
" set background=dark			" dark mode

" terminal
set termwinscroll=1000
nnoremap <c-s> :enew<cr>:terminal ++curwin<cr>

" netrw
nnoremap <c-n> :enew<cr>:Explore<cr>
let g:netrw_keepdir = 0 " makes file copying word easier
let g:netrw_banner = 0 " hide the banner
" different copy command for easier directory copying
let g:netrw_localcopydircmd = 'cp -r'

" buffer cleanup
function s:bcleanup() abort
    let l:buffers = filter(getbufinfo(), {_, v -> !v.loaded && v.listed})
    if !empty(l:buffers)
        execute 'bdelete' join(map(l:buffers, {_, v -> v.bufnr}))
    endif
endfunction
command! -bar Bcleanup call s:bcleanup()

"" gui
set guifont=Iosevka\ Fixed\ Slab:h14

"" plugins

" gruvbox8
colorscheme gruvbox8

" lightline
let g:lightline = {
	\ 'colorscheme': 'gruvbox8',
	\ }

"" language-specific settings

" scheme and friends
autocmd Filetype scheme let b:AutoPairs={'(':')', '[':']', '{':'}','"':'"','```':'```','"""':'"""',"'''":"'''"}
autocmd Filetype scheme set expandtab
